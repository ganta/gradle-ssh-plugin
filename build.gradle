apply plugin: 'groovy'
apply plugin: 'jacoco'

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'com.jcraft:jsch:0.1.51'
    compile 'com.jcraft:jsch.agentproxy.connector-factory:0.0.7'
    compile('com.jcraft:jsch.agentproxy.jsch:0.0.7') {
        exclude module: 'jsch'
    }
    testCompile('org.spockframework:spock-core:0.7-groovy-2.0') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile 'org.apache.sshd:sshd-core:0.9.0'
}

test {
    useJUnit {
        excludeCategories 'org.hidetake.gradle.ssh.server.ServerIntegrationTest'
    }
}

task serverIntegrationTest(type: Test) {
    useJUnit {
        includeCategories 'org.hidetake.gradle.ssh.server.ServerIntegrationTest'
    }
    reports {
        html.destination = file("$buildDir/reports/server-integration-tests")
    }
}

jacoco {
    toolVersion = '0.7.1.201405082137'
}

task jacocoServerIntegrationTestReport(type: JacocoReport) {
    executionData serverIntegrationTest
    sourceSets sourceSets.main
    reports.html.destination "$buildDir/reports/jacoco/server-integration-tests"
}

check.dependsOn serverIntegrationTest
check.dependsOn jacocoTestReport
check.dependsOn jacocoServerIntegrationTestReport

task javadocJar(type: Jar, dependsOn: groovydoc) {
    from "${buildDir}/docs/groovydoc"
    classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

if (gradle.startParameter.taskNames.contains('publishMavenCentral')) {
    apply from: 'build.publish.gradle'
} else {
    uploadArchives {
        repositories.ivy {
            url = "$buildDir/ivy"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.0-rc-1'
}

task archiveDependencies(type: Zip, dependsOn: jar) {
    classifier = 'all'
    into('dep-libs') {
        from configurations.runtime
        from 'build/libs'
    }
}
